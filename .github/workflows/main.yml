name: Combined workflow

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  MainProjectActions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

      - name: Run linting
        run: npm run lint

      - name: Format code
        run: npm run format

      - name: Build the project
        run: npm run build

  SonarCloudScan:
    runs-on: ubuntu-latest
    needs: MainProjectActions
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=mar-ina-17_recipes-book
            -Dsonar.organization=mar-ina-17
            -Dsonar.branch.name=main
            -Dsonar.sources=src
            -Dsonar.tests=src
            -Dsonar.test.inclusions=**/*.test.tsx,**/*.test.ts,**/*.{ts,tsx,js,jsx}
            -Dsonar.exclusions=**/node_modules/**,**/dist/**
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.typescript.tsconfigPath=tsconfig.json

  BuildDockerImage:
    runs-on: ubuntu-latest
    needs: ["MainProjectActions", "SonarCloudScan"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/recipes-book:latest .

  Trivy:
    runs-on: ubuntu-latest
    needs: BuildDockerImage
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run Trivy scan on local Docker image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "recipes-book:latest" 
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"

  PushDockerImage:
    runs-on: ubuntu-latest
    needs: Trivy
    steps:
      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/recipes-book:latest
